{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pipelineSetupV1"
		},
		"AzureBlobStorageStage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageStage'"
		},
		"AzureDataLakeStorage_LinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage_LinkedService'"
		},
		"AzureFunction_CovertJsonToCsv_LinkedService_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction_CovertJsonToCsv_LinkedService'"
		},
		"AzureFunction_LinkedService_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction_LinkedService'"
		},
		"AzureFunction_Log_FileProcessing_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction_Log_FileProcessing'"
		},
		"API_Data_Linked_Service_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().ip_api_url}"
		},
		"AzureDataLakeStorage_LinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demoadfgen2.dfs.core.windows.net"
		},
		"AzureFunction_CovertJsonToCsv_LinkedService_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://testpythoncode.azurewebsites.net"
		},
		"AzureFunction_LinkedService_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://testpythoncode.azurewebsites.net"
		},
		"AzureFunction_Log_FileProcessing_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://testpythoncode.azurewebsites.net"
		},
		"FtpServer_Linked_Service_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "ftp://192.168.0.105/"
		},
		"RestService_To_Access_OAuthCode_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://login.microsoftonline.com/"
		},
		"integrationRuntimeLogical_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/2f74b086-1adb-4bdf-ab0d-c693816302a7/resourcegroups/azure-data-factory-demo/providers/Microsoft.DataFactory/factories/pipelineSetupV1/integrationruntimes/integrationRuntime-ftp"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_FunctionName": {
			"type": "string",
			"defaultValue": "accees-to-logAnalytics"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_TenentId": {
			"type": "string",
			"defaultValue": "dd4149a3-da2c-4ee2-bb69-b00528959f08"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_ContentType": {
			"type": "string",
			"defaultValue": "application/x-www-form-urlencoded"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_GrantType": {
			"type": "string",
			"defaultValue": "client_credentials"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_ClientId": {
			"type": "string",
			"defaultValue": "94d71110-76b3-4078-ad22-3ef3f7b654d1"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_ClientSecret": {
			"type": "string",
			"defaultValue": "ZU0~3AHZtSUMuvdEt2Um._0Xwxa_rB16_d"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_Resource": {
			"type": "string",
			"defaultValue": "https://api.loganalytics.io"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_EndPointUrl": {
			"type": "string",
			"defaultValue": "https://login.microsoftonline.com/"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_WorkSpaceId": {
			"type": "string",
			"defaultValue": "2f5d639a-25b6-44ac-8ee8-ec9f68fa95b5"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_LogAnalyticsUrl": {
			"type": "string",
			"defaultValue": "https://api.loganalytics.io/v1/workspaces/"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_LogQuery": {
			"type": "string",
			"defaultValue": "AzureActivity | where TimeGenerated >= ago(2h) | order by TimeGenerated asc;"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_PreProcessFunctionName": {
			"type": "string",
			"defaultValue": "convert-json-to-csv"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_ContainerName": {
			"type": "string",
			"defaultValue": "azureactivity"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_FolderName": {
			"type": "string",
			"defaultValue": "generallog"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_AccountName": {
			"type": "string",
			"defaultValue": "123datalakegen2"
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_AccountKey": {
			"type": "string",
			"defaultValue": "+hmWpzgVZ7H/IJVu0Uc74O/tKgx8OSf1Cx/VU3yrzNWxGMKlYq7u92/J9pXUeh+xzskBw07FXB+A2Sx0tSFD6g=="
		},
		"Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_LogContainerName": {
			"type": "string",
			"defaultValue": "logs"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Copy_API_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data API",
						"description": "This is a activity to copy data from api",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Rest_API_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "API_Data_Sink",
								"type": "DatasetReference",
								"parameters": {
									"api_pipeline_folder": "api_data_folder",
									"api_pipeline_filename": "dummy.json"
								}
							}
						]
					}
				],
				"parameters": {
					"api_pipeline_folder": {
						"type": "string",
						"defaultValue": "api_data_folder"
					},
					"api_pipeline_filename": {
						"type": "string",
						"defaultValue": "dummy.json"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Rest_API_Data')]",
				"[concat(variables('factoryId'), '/datasets/API_Data_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Copy_Blob_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyActivity_Blob_Data",
						"description": "This is copy activity to change source dataset type",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText_Blob_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTextSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText_Blob_Source')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedTextSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Copy_Data_AzureDataLake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data into Azure DataLake Gen2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText_Blob_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_AzureDataLake_Sink",
								"type": "DatasetReference",
								"parameters": {
									"sinkFolderPath": "stage_data_ADLGen2"
								}
							}
						]
					},
					{
						"name": "Get Metadata Azure DataLake Gen2",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy data into Azure DataLake Gen2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText_AzureDataLake_Sink",
								"type": "DatasetReference",
								"parameters": {
									"sinkFolderPath": "stage_data_ADLGen2"
								}
							},
							"fieldList": [
								"itemName",
								"itemType",
								"lastModified",
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition AzureDataLake",
						"description": "This is a  conditional data flow based on different conditions.",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata Azure DataLake Gen2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Metadata Azure DataLake Gen2').output.itemType, 'Folder')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait_FalseActivity",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "wait_TrueActivity",
									"description": "This is a wait activity to check true response ",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"variables": {
					"activityMetadata": {
						"type": "String",
						"defaultValue": "\"\""
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText_Blob_Source')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText_AzureDataLake_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Copy_FTP_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is a pipeline to copy data from ftp folder",
				"activities": [
					{
						"name": "Copy data from FTP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"useBinaryTransfer": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText_FTP_Cource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_FTP_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText_FTP_Cource')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText_FTP_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_LogAnalytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Function to Get AzureActivity Log",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "AccessCode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@pipeline().parameters.FunctionName",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json",
								"Authorization": {
									"value": "@concat('Bearer ',activity('AccessCode').output.access_token)",
									"type": "Expression"
								}
							},
							"body": {
								"value": "{\n    \"tenentId\" : \"@{pipeline().parameters.TenentId}\",\n    \"contentType\" : \"@{pipeline().parameters.ContentType}\",\n    \"grantType\" : \"@{pipeline().parameters.GrantType}\",\n    \"clientId\" : \"@{pipeline().parameters.ClientId}\",\n    \"clientSecret\" : \"@{pipeline().parameters.ClientSecret}\",\n    \"resource\" : \"@{pipeline().parameters.Resource}\",\n    \"endPointUrl\" : \"@{pipeline().parameters.EndPointUrl}\",\n    \"workSpaceId\" : \"@{pipeline().parameters.WorkSpaceId}\",\n    \"logAnalyticsUrl\" : \"@{pipeline().parameters.LogAnalyticsUrl}\",\n    \"logQuery\" : \"@{pipeline().parameters.LogQuery}\"\n}",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction_LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Query Data If Condition",
						"description": "This activity check the response data",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Azure Function to Get AzureActivity Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(activity('Azure Function to Get AzureActivity Log').output.StatusCode, 200), equals(activity('Azure Function to Get AzureActivity Log').output.Message, 'Query data has been extracted successfully.'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Azure Function to Log Errors",
									"description": "This azure function helps to log the activity ",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "logging-data-retrival-process",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n   \"containerName\" : \"@{pipeline().parameters.LogContainerName}\",\n    \"accountName\" : \"@{pipeline().parameters.AccountName}\",\n    \"accountKey\" : \"@{pipeline().parameters.AccountKey}\",\n    \"message\" : \"@{activity('Azure Function to Get AzureActivity Log').output.Message}\",\n    \"statusCode\" : \"@{activity('Azure Function to Get AzureActivity Log').output.StatusCode}\",\n    \"pipelineName\" : \"@{pipeline().Pipeline}\",\n    \"pipelineRunId\" : \"@{pipeline().RunId}\"\n}",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureFunction_Log_FileProcessing",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Convert Json to Csv and store into ADL",
									"description": "This azure function activity is used to store data into csv format from and store into ADL gen2",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "convert-json-to-csv",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n    \"jsonRequestData\" : @{activity('Azure Function to Get AzureActivity Log').output.Data},\n    \"logType\" : \"AzureActivity\",\n    \"containerName\" : \"@{pipeline().parameters.ContainerName}\",\n    \"folderName\" : \"@{pipeline().parameters.FolderName}\",\n    \"accountName\" : \"@{pipeline().parameters.AccountName}\",\n    \"accountKey\" : \"@{pipeline().parameters.AccountKey}\"\n}",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureFunction_CovertJsonToCsv_LinkedService",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Azure Function to Log activity",
									"description": "This azure function helps to log the activity ",
									"type": "AzureFunctionActivity",
									"dependsOn": [
										{
											"activity": "Convert Json to Csv and store into ADL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "logging-data-retrival-process",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n   \"containerName\" : \"@{pipeline().parameters.LogContainerName}\",\n    \"accountName\" : \"@{pipeline().parameters.AccountName}\",\n    \"accountKey\" : \"@{pipeline().parameters.AccountKey}\",\n    \"message\" : \"@{activity('Convert Json to Csv and store into ADL').output.Message}\",\n    \"statusCode\" : \"@{activity('Convert Json to Csv and store into ADL').output.StatusCode}\",\n    \"pipelineName\" : \"@{pipeline().Pipeline}\",\n    \"pipelineRunId\" : \"@{pipeline().RunId}\"\n}",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureFunction_Log_FileProcessing",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "AccessCode",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://login.microsoftonline.com/dd4149a3-da2c-4ee2-bb69-b00528959f08/oauth2/token",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=','client_credentials','&client_id=','94d71110-76b3-4078-ad22-3ef3f7b654d1','&client_secret=','ZU0~3AHZtSUMuvdEt2Um._0Xwxa_rB16_d','&resource=https://management.azure.com/')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"FunctionName": {
						"type": "string",
						"defaultValue": "accees-to-logAnalytics"
					},
					"TenentId": {
						"type": "string",
						"defaultValue": "dd4149a3-da2c-4ee2-bb69-b00528959f08"
					},
					"ContentType": {
						"type": "string",
						"defaultValue": "application/x-www-form-urlencoded"
					},
					"GrantType": {
						"type": "string",
						"defaultValue": "client_credentials"
					},
					"ClientId": {
						"type": "string",
						"defaultValue": "94d71110-76b3-4078-ad22-3ef3f7b654d1"
					},
					"ClientSecret": {
						"type": "string",
						"defaultValue": "ZU0~3AHZtSUMuvdEt2Um._0Xwxa_rB16_d"
					},
					"Resource": {
						"type": "string",
						"defaultValue": "https://api.loganalytics.io"
					},
					"EndPointUrl": {
						"type": "string",
						"defaultValue": "https://login.microsoftonline.com/"
					},
					"WorkSpaceId": {
						"type": "string",
						"defaultValue": "2f5d639a-25b6-44ac-8ee8-ec9f68fa95b5"
					},
					"LogAnalyticsUrl": {
						"type": "string",
						"defaultValue": "https://api.loganalytics.io/v1/workspaces/"
					},
					"LogQuery": {
						"type": "string",
						"defaultValue": "AzureActivity | where TimeGenerated >= ago(2h) | order by TimeGenerated asc;"
					},
					"PreProcessFunctionName": {
						"type": "string",
						"defaultValue": "convert-json-to-csv"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "azureactivity"
					},
					"FolderName": {
						"type": "string",
						"defaultValue": "generallog"
					},
					"AccountName": {
						"type": "string",
						"defaultValue": "123datalakegen2"
					},
					"AccountKey": {
						"type": "string",
						"defaultValue": "+hmWpzgVZ7H/IJVu0Uc74O/tKgx8OSf1Cx/VU3yrzNWxGMKlYq7u92/J9pXUeh+xzskBw07FXB+A2Sx0tSFD6g=="
					},
					"LogContainerName": {
						"type": "string",
						"defaultValue": "logs"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction_LinkedService')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction_Log_FileProcessing')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction_CovertJsonToCsv_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_Data_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageStage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"api_pipeline_folder": {
						"type": "string",
						"defaultValue": "api_data_folder"
					},
					"api_pipeline_filename": {
						"type": "string",
						"defaultValue": "dummy.json"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().api_pipeline_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().api_pipeline_folder",
							"type": "Expression"
						},
						"container": "destination-container"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageStage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_AzureDataLake_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_LinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sinkFolderPath": {
						"type": "string",
						"defaultValue": "stage_data_ADLGen2"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "microsoft-certified-azure-data-engineer-associate-skills-measured.pdf",
						"folderPath": {
							"value": "@dataset().sinkFolderPath",
							"type": "Expression"
						},
						"fileSystem": "stage-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_Blob_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageStage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "microsoft-certified-azure-data-engineer-associate-skills-measured.pdf",
						"folderPath": "Azure-Certificates",
						"container": "stage-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_FTP_Cource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FtpServer_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": "resume_old"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FtpServer_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_FTP_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageStage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dummy.json",
						"folderPath": "api_data",
						"container": "destination-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OAuthCodeAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_To_Access_OAuthCode",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tenentId": {
						"type": "String",
						"defaultValue": "dd4149a3-da2c-4ee2-bb69-b00528959f08"
					},
					"client_id": {
						"type": "string",
						"defaultValue": "94d71110-76b3-4078-ad22-3ef3f7b654d1"
					},
					"redirect_uri": {
						"type": "string",
						"defaultValue": "https://azureloganalyticsfunction.azurewebsites.net/"
					},
					"scope": {
						"type": "string",
						"defaultValue": "openid"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().tenentId, '/oauth2/v2.0/authorize?response_type=code&client_id=', dataset().client_id, '&redirect_uri=', dataset().redirect_uri, '&scope=openid')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_To_Access_OAuthCode')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_API_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "API_Data_Linked_Service",
					"type": "LinkedServiceReference",
					"parameters": {
						"ip_api_url": "http://ip-api.com/json/24.48.0.1"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/API_Data_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_Data_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ip_api_url": {
						"type": "String",
						"defaultValue": "http://ip-api.com/json/24.48.0.1"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('API_Data_Linked_Service_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageStage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageStage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_LinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_LinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction_CovertJsonToCsv_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction_CovertJsonToCsv_LinkedService_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction_CovertJsonToCsv_LinkedService_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction_LinkedService_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction_LinkedService_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction_Log_FileProcessing')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This azure function is used to keep the track of processed and unprocessed file.",
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction_Log_FileProcessing_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction_Log_FileProcessing_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FtpServer_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('FtpServer_Linked_Service_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "integrationRuntimeLogical",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeLogical')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_To_Access_OAuthCode')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_To_Access_OAuthCode_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime-ftp')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimeLogical')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('integrationRuntimeLogical_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline_LogAnalytics",
							"type": "PipelineReference"
						},
						"parameters": {
							"FunctionName": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_FunctionName')]",
							"TenentId": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_TenentId')]",
							"ContentType": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_ContentType')]",
							"GrantType": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_GrantType')]",
							"ClientId": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_ClientId')]",
							"ClientSecret": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_ClientSecret')]",
							"Resource": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_Resource')]",
							"EndPointUrl": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_EndPointUrl')]",
							"WorkSpaceId": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_WorkSpaceId')]",
							"LogAnalyticsUrl": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_LogAnalyticsUrl')]",
							"LogQuery": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_LogQuery')]",
							"PreProcessFunctionName": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_PreProcessFunctionName')]",
							"ContainerName": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_ContainerName')]",
							"FolderName": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_FolderName')]",
							"AccountName": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_AccountName')]",
							"AccountKey": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_AccountKey')]",
							"LogContainerName": "[parameters('Pipeline_Trigger_properties_pipeline_LogAnalytics_parameters_LogContainerName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 2,
						"startTime": "2020-11-17T14:23:00",
						"endTime": "2020-11-18T14:23:00",
						"timeZone": "Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_LogAnalytics')]"
			]
		}
	]
}